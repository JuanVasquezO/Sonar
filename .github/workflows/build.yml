name: CI/CD Pipeline

on:
  # Permite ejecutar el workflow manualmente
  workflow_dispatch:
  # Ejecuta el workflow al hacer push en la rama main
  push:
    branches:
      - main

jobs:
  # Job de tests unitarios
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      # Paso para hacer checkout del repositorio
      - uses: actions/checkout@v2

      # Configura JDK 17
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      # Configura caché de Maven
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Ejecuta pruebas unitarias con JaCoCo para generar el reporte de cobertura
      - name: Run Tests
        run: mvn clean test jacoco:report

  # Job de análisis de SonarCloud
  sonar:
    needs: tests
    name: SonarCloud analysis
    runs-on: ubuntu-latest
    steps:
      # Paso para hacer checkout del repositorio
      - uses: actions/checkout@v2

      # Configura JDK 17
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      # Configura caché de SonarCloud
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Configura caché de Maven
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Ejecuta el análisis de SonarCloud
      - name: SonarCloud Scan
        run: mvn verify sonar:sonar -Dsonar.projectKey=JuanVasquezO_Sonar -Dsonar.organization=JuanVasquezO -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Job de compilación del proyecto
  build:
    needs: sonar
    name: Build
    runs-on: ubuntu-latest
    steps:
      # Paso para hacer checkout del repositorio
      - uses: actions/checkout@v2

      # Configura JDK 17
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      # Configura caché de Maven
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Compila el proyecto con Maven
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml

      # Sube el artefacto generado (JAR)
      - name: Upload JAR
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: target/Sonar-0.0.1-SNAPSHOT.jar
