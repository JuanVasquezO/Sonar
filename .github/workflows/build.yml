# Workflow name
name: CI/CD Pipeline

on:
  # Manually trigger workflow runs
  workflow_dispatch:
  # Trigger the workflow on push from the main branch
  push:
    branches:
      - main

jobs:
  # Test's job
  tests:
    name: Unit tests with Coverage
    # Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    # Job's steps
    steps:
      # Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      # Set up JDK 17
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      # Set up Maven cache
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # Run Tests and collect coverage
      - name: Run Tests with Coverage
        run: mvn -B test jacoco:report -Pcoverage

  # Build's job
  build:
    # Depends on test's job
    needs: tests
    name: Build
    # Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    steps:
      # Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      # Set up JDK 17
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      # Set up Maven cache
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # Build the application using Maven
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      # Build the application using Maven
      - name: Upload JAR
        uses: actions/upload-artifact@v3
        with:
          # Set artifact name
          name: artifact
          # From this path
          path: target/Sonar-0.0.1-SNAPSHOT.jar
